import { booleanAttribute, Directive, HostBinding, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class ListGroupDirective {
    constructor() {
        /**
         * Remove some borders and rounded corners to render list group items edge-to-edge in a parent component (e.g., `<CCard>`).
         * @type boolean
         */
        this.flush = false;
    }
    get hostClasses() {
        return {
            'list-group': true,
            'list-group-horizontal': this.horizontal === true || this.horizontal === '',
            [`list-group-horizontal-${this.horizontal}`]: !!this.horizontal && typeof this.horizontal !== 'boolean',
            'list-group-flush': this.flush
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.1", ngImport: i0, type: ListGroupDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "16.1.0", version: "18.2.1", type: ListGroupDirective, isStandalone: true, selector: "[cListGroup]", inputs: { flush: ["flush", "flush", booleanAttribute], horizontal: "horizontal" }, host: { properties: { "class": "this.hostClasses" }, classAttribute: "list-group" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.1", ngImport: i0, type: ListGroupDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cListGroup]',
                    standalone: true,
                    host: { class: 'list-group' }
                }]
        }], propDecorators: { flush: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], horizontal: [{
                type: Input
            }], hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1ncm91cC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2xpc3QtZ3JvdXAvbGlzdC1ncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVFoRixNQUFNLE9BQU8sa0JBQWtCO0lBTC9CO1FBTUU7OztXQUdHO1FBQ3FDLFVBQUssR0FBcUIsS0FBSyxDQUFDO0tBZ0J6RTtJQVRDLElBQ0ksV0FBVztRQUNiLE9BQU87WUFDTCxZQUFZLEVBQUUsSUFBSTtZQUNsQix1QkFBdUIsRUFBRSxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLEVBQUU7WUFDM0UsQ0FBQyx5QkFBeUIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLFNBQVM7WUFDdkcsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLEtBQUs7U0FDL0IsQ0FBQztJQUNKLENBQUM7OEdBcEJVLGtCQUFrQjtrR0FBbEIsa0JBQWtCLG9GQUtULGdCQUFnQjs7MkZBTHpCLGtCQUFrQjtrQkFMOUIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUU7aUJBQzlCOzhCQU15QyxLQUFLO3NCQUE1QyxLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQUs3QixVQUFVO3NCQUFsQixLQUFLO2dCQUdGLFdBQVc7c0JBRGQsV0FBVzt1QkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYm9vbGVhbkF0dHJpYnV0ZSwgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNpemVzIH0gZnJvbSAnLi4vY29yZXVpLnR5cGVzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NMaXN0R3JvdXBdJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaG9zdDogeyBjbGFzczogJ2xpc3QtZ3JvdXAnIH1cbn0pXG5leHBvcnQgY2xhc3MgTGlzdEdyb3VwRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIFJlbW92ZSBzb21lIGJvcmRlcnMgYW5kIHJvdW5kZWQgY29ybmVycyB0byByZW5kZXIgbGlzdCBncm91cCBpdGVtcyBlZGdlLXRvLWVkZ2UgaW4gYSBwYXJlbnQgY29tcG9uZW50IChlLmcuLCBgPENDYXJkPmApLlxuICAgKiBAdHlwZSBib29sZWFuXG4gICAqL1xuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSkgZmx1c2g6IHN0cmluZyB8IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogU3BlY2lmeSBob3Jpem9udGFsIGxheW91dCB0eXBlLlxuICAgKi9cbiAgQElucHV0KCkgaG9yaXpvbnRhbD86IGJvb2xlYW4gfCBTaXplcztcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgZ2V0IGhvc3RDbGFzc2VzKCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICdsaXN0LWdyb3VwJzogdHJ1ZSxcbiAgICAgICdsaXN0LWdyb3VwLWhvcml6b250YWwnOiB0aGlzLmhvcml6b250YWwgPT09IHRydWUgfHwgdGhpcy5ob3Jpem9udGFsID09PSAnJyxcbiAgICAgIFtgbGlzdC1ncm91cC1ob3Jpem9udGFsLSR7dGhpcy5ob3Jpem9udGFsfWBdOiAhIXRoaXMuaG9yaXpvbnRhbCAmJiB0eXBlb2YgdGhpcy5ob3Jpem9udGFsICE9PSAnYm9vbGVhbicsXG4gICAgICAnbGlzdC1ncm91cC1mbHVzaCc6IHRoaXMuZmx1c2hcbiAgICB9O1xuICB9XG59XG4iXX0=