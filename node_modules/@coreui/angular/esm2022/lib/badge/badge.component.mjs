import { Component, HostBinding, input } from '@angular/core';
import { TextBgColorDirective, TextColorDirective } from '../utilities';
import * as i0 from "@angular/core";
import * as i1 from "../utilities/text-color.directive";
import * as i2 from "../utilities/text-bg-color.directive";
export class BadgeComponent {
    constructor() {
        /**
         * Sets the color context of the component to one of CoreUI’s themed colors.
         * @type Colors
         */
        this.color = input();
        /**
         * Position badge in one of the corners of a link or button.
         * @type BadgePositions
         */
        this.position = input();
        /**
         * Select the shape of the component.
         * @type Shapes
         */
        this.shape = input();
        /**
         * Size the component small.
         */
        this.size = input();
        /**
         * Sets the text color of the component to one of CoreUI’s themed colors.
         * via TextColorDirective
         * @type TextColors
         */
        this.textColor = input();
        /**
         * Sets the component's color scheme to one of CoreUI's themed colors, ensuring the text color contrast adheres to the WCAG 4.5:1 contrast ratio standard for accessibility.
         * via TextBgColorDirective
         * @type Colors
         * @since 5.0.0
         */
        this.textBgColor = input();
    }
    get hostClasses() {
        const position = this.position();
        const positionClasses = {
            'position-absolute': !!position,
            'translate-middle': !!position,
            'top-0': position?.includes('top'),
            'top-100': position?.includes('bottom'),
            'start-100': position?.includes('end'),
            'start-0': position?.includes('start')
        };
        return Object.assign({
            badge: true,
            [`bg-${this.color()}`]: !!this.color(),
            [`badge-${this.size()}`]: !!this.size(),
            [`${this.shape()}`]: !!this.shape()
        }, !!position ? positionClasses : {});
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.1", ngImport: i0, type: BadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "18.1.1", type: BadgeComponent, isStandalone: true, selector: "c-badge", inputs: { color: { classPropertyName: "color", publicName: "color", isSignal: true, isRequired: false, transformFunction: null }, position: { classPropertyName: "position", publicName: "position", isSignal: true, isRequired: false, transformFunction: null }, shape: { classPropertyName: "shape", publicName: "shape", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "size", isSignal: true, isRequired: false, transformFunction: null }, textColor: { classPropertyName: "textColor", publicName: "textColor", isSignal: true, isRequired: false, transformFunction: null }, textBgColor: { classPropertyName: "textBgColor", publicName: "textBgColor", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "this.hostClasses" }, classAttribute: "badge" }, hostDirectives: [{ directive: i1.TextColorDirective, inputs: ["cTextColor", "textColor"] }, { directive: i2.TextBgColorDirective, inputs: ["cTextBgColor", "textBgColor"] }], ngImport: i0, template: '<ng-content />', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.1", ngImport: i0, type: BadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'c-badge',
                    template: '<ng-content />',
                    standalone: true,
                    hostDirectives: [
                        { directive: TextColorDirective, inputs: ['cTextColor: textColor'] },
                        { directive: TextBgColorDirective, inputs: ['cTextBgColor: textBgColor'] }
                    ],
                    host: {
                        class: 'badge'
                    }
                }]
        }], propDecorators: { hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9iYWRnZS9iYWRnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRTNFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7OztBQWN4RSxNQUFNLE9BQU8sY0FBYztJQVozQjtRQWFFOzs7V0FHRztRQUNNLFVBQUssR0FBb0MsS0FBSyxFQUFFLENBQUM7UUFDMUQ7OztXQUdHO1FBQ00sYUFBUSxHQUE0QyxLQUFLLEVBQUUsQ0FBQztRQUVyRTs7O1dBR0c7UUFDTSxVQUFLLEdBQW9DLEtBQUssRUFBRSxDQUFDO1FBRTFEOztXQUVHO1FBQ00sU0FBSSxHQUFrQyxLQUFLLEVBQUUsQ0FBQztRQUV2RDs7OztXQUlHO1FBQ00sY0FBUyxHQUF3QyxLQUFLLEVBQUUsQ0FBQztRQUVsRTs7Ozs7V0FLRztRQUNNLGdCQUFXLEdBQW9DLEtBQUssRUFBRSxDQUFDO0tBd0JqRTtJQXRCQyxJQUNJLFdBQVc7UUFDYixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakMsTUFBTSxlQUFlLEdBQUc7WUFDdEIsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLFFBQVE7WUFDL0Isa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLFFBQVE7WUFDOUIsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDO1lBQ2xDLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQztZQUN2QyxXQUFXLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFDdEMsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDO1NBQ3ZDLENBQUM7UUFFRixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQ2xCO1lBQ0UsS0FBSyxFQUFFLElBQUk7WUFDWCxDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUN0QyxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUN2QyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtTQUNwQyxFQUNELENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUNsQyxDQUFDO0lBQ0osQ0FBQzs4R0EzRFUsY0FBYztrR0FBZCxjQUFjLGlrQ0FWZixnQkFBZ0I7OzJGQVVmLGNBQWM7a0JBWjFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLFNBQVM7b0JBQ25CLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixjQUFjLEVBQUU7d0JBQ2QsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxFQUFFLENBQUMsdUJBQXVCLENBQUMsRUFBRTt3QkFDcEUsRUFBRSxTQUFTLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxFQUFFLENBQUMsMkJBQTJCLENBQUMsRUFBRTtxQkFDM0U7b0JBQ0QsSUFBSSxFQUFFO3dCQUNKLEtBQUssRUFBRSxPQUFPO3FCQUNmO2lCQUNGOzhCQXdDSyxXQUFXO3NCQURkLFdBQVc7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIGlucHV0LCBJbnB1dFNpZ25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFkZ2VQb3NpdGlvbnMsIENvbG9ycywgU2hhcGVzLCBUZXh0Q29sb3JzIH0gZnJvbSAnLi4vY29yZXVpLnR5cGVzJztcbmltcG9ydCB7IFRleHRCZ0NvbG9yRGlyZWN0aXZlLCBUZXh0Q29sb3JEaXJlY3RpdmUgfSBmcm9tICcuLi91dGlsaXRpZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLWJhZGdlJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudCAvPicsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGhvc3REaXJlY3RpdmVzOiBbXG4gICAgeyBkaXJlY3RpdmU6IFRleHRDb2xvckRpcmVjdGl2ZSwgaW5wdXRzOiBbJ2NUZXh0Q29sb3I6IHRleHRDb2xvciddIH0sXG4gICAgeyBkaXJlY3RpdmU6IFRleHRCZ0NvbG9yRGlyZWN0aXZlLCBpbnB1dHM6IFsnY1RleHRCZ0NvbG9yOiB0ZXh0QmdDb2xvciddIH1cbiAgXSxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnYmFkZ2UnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgQmFkZ2VDb21wb25lbnQge1xuICAvKipcbiAgICogU2V0cyB0aGUgY29sb3IgY29udGV4dCBvZiB0aGUgY29tcG9uZW50IHRvIG9uZSBvZiBDb3JlVUnigJlzIHRoZW1lZCBjb2xvcnMuXG4gICAqIEB0eXBlIENvbG9yc1xuICAgKi9cbiAgcmVhZG9ubHkgY29sb3I6IElucHV0U2lnbmFsPENvbG9ycyB8IHVuZGVmaW5lZD4gPSBpbnB1dCgpO1xuICAvKipcbiAgICogUG9zaXRpb24gYmFkZ2UgaW4gb25lIG9mIHRoZSBjb3JuZXJzIG9mIGEgbGluayBvciBidXR0b24uXG4gICAqIEB0eXBlIEJhZGdlUG9zaXRpb25zXG4gICAqL1xuICByZWFkb25seSBwb3NpdGlvbjogSW5wdXRTaWduYWw8QmFkZ2VQb3NpdGlvbnMgfCB1bmRlZmluZWQ+ID0gaW5wdXQoKTtcblxuICAvKipcbiAgICogU2VsZWN0IHRoZSBzaGFwZSBvZiB0aGUgY29tcG9uZW50LlxuICAgKiBAdHlwZSBTaGFwZXNcbiAgICovXG4gIHJlYWRvbmx5IHNoYXBlOiBJbnB1dFNpZ25hbDxTaGFwZXMgfCB1bmRlZmluZWQ+ID0gaW5wdXQoKTtcblxuICAvKipcbiAgICogU2l6ZSB0aGUgY29tcG9uZW50IHNtYWxsLlxuICAgKi9cbiAgcmVhZG9ubHkgc2l6ZTogSW5wdXRTaWduYWw8J3NtJyB8IHVuZGVmaW5lZD4gPSBpbnB1dCgpO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSB0ZXh0IGNvbG9yIG9mIHRoZSBjb21wb25lbnQgdG8gb25lIG9mIENvcmVVSeKAmXMgdGhlbWVkIGNvbG9ycy5cbiAgICogdmlhIFRleHRDb2xvckRpcmVjdGl2ZVxuICAgKiBAdHlwZSBUZXh0Q29sb3JzXG4gICAqL1xuICByZWFkb25seSB0ZXh0Q29sb3I6IElucHV0U2lnbmFsPFRleHRDb2xvcnMgfCB1bmRlZmluZWQ+ID0gaW5wdXQoKTtcblxuICAvKipcbiAgICogU2V0cyB0aGUgY29tcG9uZW50J3MgY29sb3Igc2NoZW1lIHRvIG9uZSBvZiBDb3JlVUkncyB0aGVtZWQgY29sb3JzLCBlbnN1cmluZyB0aGUgdGV4dCBjb2xvciBjb250cmFzdCBhZGhlcmVzIHRvIHRoZSBXQ0FHIDQuNToxIGNvbnRyYXN0IHJhdGlvIHN0YW5kYXJkIGZvciBhY2Nlc3NpYmlsaXR5LlxuICAgKiB2aWEgVGV4dEJnQ29sb3JEaXJlY3RpdmVcbiAgICogQHR5cGUgQ29sb3JzXG4gICAqIEBzaW5jZSA1LjAuMFxuICAgKi9cbiAgcmVhZG9ubHkgdGV4dEJnQ29sb3I6IElucHV0U2lnbmFsPENvbG9ycyB8IHVuZGVmaW5lZD4gPSBpbnB1dCgpO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgaG9zdENsYXNzZXMoKTogYW55IHtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMucG9zaXRpb24oKTtcbiAgICBjb25zdCBwb3NpdGlvbkNsYXNzZXMgPSB7XG4gICAgICAncG9zaXRpb24tYWJzb2x1dGUnOiAhIXBvc2l0aW9uLFxuICAgICAgJ3RyYW5zbGF0ZS1taWRkbGUnOiAhIXBvc2l0aW9uLFxuICAgICAgJ3RvcC0wJzogcG9zaXRpb24/LmluY2x1ZGVzKCd0b3AnKSxcbiAgICAgICd0b3AtMTAwJzogcG9zaXRpb24/LmluY2x1ZGVzKCdib3R0b20nKSxcbiAgICAgICdzdGFydC0xMDAnOiBwb3NpdGlvbj8uaW5jbHVkZXMoJ2VuZCcpLFxuICAgICAgJ3N0YXJ0LTAnOiBwb3NpdGlvbj8uaW5jbHVkZXMoJ3N0YXJ0JylcbiAgICB9O1xuXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oXG4gICAgICB7XG4gICAgICAgIGJhZGdlOiB0cnVlLFxuICAgICAgICBbYGJnLSR7dGhpcy5jb2xvcigpfWBdOiAhIXRoaXMuY29sb3IoKSxcbiAgICAgICAgW2BiYWRnZS0ke3RoaXMuc2l6ZSgpfWBdOiAhIXRoaXMuc2l6ZSgpLFxuICAgICAgICBbYCR7dGhpcy5zaGFwZSgpfWBdOiAhIXRoaXMuc2hhcGUoKVxuICAgICAgfSxcbiAgICAgICEhcG9zaXRpb24gPyBwb3NpdGlvbkNsYXNzZXMgOiB7fVxuICAgICk7XG4gIH1cbn1cbiJdfQ==