{
  "version": 3,
  "sources": ["../../../../../node_modules/@bshg/validation/dist/index.mjs"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// src/validators/validator.ts\nvar Validator = class {\n  item;\n  nestedValidators;\n  getValidatorItems() {\n    return this.validatorItems;\n  }\n  get allGood() {\n    return this.validatorItems?.every(it => it.valid);\n  }\n  applyAll() {\n    this.validatorItems?.forEach(it => it.validate());\n  }\n  reset() {\n    this.validatorItems?.forEach(it => it.reset());\n    this.nestedValidators?.forEach(it => it.validator.reset());\n  }\n  validate() {\n    const validators = [this, ...(this.nestedValidators ? this.nestedValidators.map(it => it.validator) : [])];\n    validators.forEach(it => it.applyAll());\n    return validators.every(it => it.allGood);\n  }\n  nested(name, validator) {\n    if (this.nestedValidators == void 0) this.nestedValidators = [];\n    this.nestedValidators.push({\n      name,\n      validator\n    });\n  }\n  import(results) {\n    results.forEach(it => {\n      const validatorItem = this.getValidatorItem(it.field);\n      if (validatorItem == void 0) {\n        throw new Error(`Unknown validatorItem ${it.field} for ${Object.getPrototypeOf(this).constructor.name}!`);\n      }\n      validatorItem.valid = it.valid;\n      validatorItem.message = it.message;\n      validatorItem.setter(it.value);\n    });\n  }\n};\n\n// src/validators/validator-methods/index.ts\nvar validator_methods_exports = {};\n__export(validator_methods_exports, {\n  AnyValidators: () => AnyValidators,\n  BaseValidator: () => BaseValidator,\n  NumberValidator: () => NumberValidator,\n  StringValidator: () => StringValidator,\n  ValidatorsCollector: () => ValidatorsCollector\n});\n\n// src/validators/validator-methods/base-validator.ts\nvar BaseValidator = class {\n  validatorItem;\n  constructor(validatorItem) {\n    this.validatorItem = validatorItem;\n  }\n  get value() {\n    return this.validatorItem.field();\n  }\n  error(msg) {\n    this.validatorItem.error(msg);\n  }\n  valid() {\n    this.validatorItem.valid = true;\n    this.validatorItem.message = void 0;\n  }\n  baseCondition(errorCondition, errorMsg, validator) {\n    if (errorCondition) {\n      this.error(errorMsg);\n      return;\n    }\n    return validator;\n  }\n};\n\n// src/validators/validator-methods/any-validators.ts\nvar AnyValidators = class extends BaseValidator {\n  constructor(validatorItem) {\n    super(validatorItem);\n  }\n  required(errorMsg = void 0) {\n    return this.errorIf(this.value == void 0 || this.value == \"\", errorMsg || \"This field is required!\");\n  }\n  errorIf(errorCondition, errorMsg) {\n    return super.baseCondition(errorCondition, errorMsg, this);\n  }\n};\n\n// src/validators/validator-methods/number-validator.ts\nvar NumberValidator = class extends BaseValidator {\n  constructor(validatorItem) {\n    super(validatorItem);\n  }\n  required(errorMsg = void 0) {\n    return this.errorIf(this.value == void 0, errorMsg || \"This field is required!\");\n  }\n  gt(value, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value <= value, errorMsg || `Must be greeter then '${value}'!`);\n  }\n  gte(value, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value < value, errorMsg || `Must be greeter then or equals '${value}'!`);\n  }\n  lt(value, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value <= value, errorMsg || `Must be less then '${value}'!`);\n  }\n  lte(value, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value < value, errorMsg || `Must be less then or equals '${value}'!`);\n  }\n  multipleOf(value, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value % value != 0, errorMsg || `Must be multiple of '${value}'!`);\n  }\n  safe(errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value >= Number.MIN_SAFE_INTEGER && this.value <= Number.MAX_SAFE_INTEGER, errorMsg || `value must be between '${Number.MIN_SAFE_INTEGER}' and '${Number.MAX_SAFE_INTEGER}'!`);\n  }\n  positive(errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value < 0, errorMsg || `This Field Must be positive!`);\n  }\n  negative(errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value > 0, errorMsg || `This Field Must be Negative!`);\n  }\n  errorIf(errorCondition, errorMsg) {\n    return super.baseCondition(errorCondition, errorMsg, this);\n  }\n};\n\n// src/validators/validator-utils.ts\nvar validator_utils_exports = {};\n__export(validator_utils_exports, {\n  EMAIL_PATTERN: () => EMAIL_PATTERN,\n  PHONE_PATTERN: () => PHONE_PATTERN\n});\nvar EMAIL_PATTERN = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\nvar PHONE_PATTERN = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n\n// src/validators/validator-methods/string-validator.ts\nvar StringValidator = class extends BaseValidator {\n  constructor(validatorItem) {\n    super(validatorItem);\n  }\n  required(errorMsg = void 0) {\n    return this.errorIf(this.value == void 0 || this.value == \"\", errorMsg || \"This field is required!\");\n  }\n  //////\n  max(max, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value.length > max, errorMsg || `Must be ${max} or fewer characters long`);\n  }\n  min(min, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value.length < min, errorMsg || `Must be ${min} or more characters long`);\n  }\n  length(length, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value.length == length, errorMsg || `Must be exactly ${length} characters long`);\n  }\n  /////\n  includes(sub, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value.includes(sub), errorMsg || `Must Include '${sub}'`);\n  }\n  startsWith(start, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value.startsWith(start), errorMsg || `Must Start With '${start}'`);\n  }\n  endsWith(start, errorMsg = void 0) {\n    if (this.value == void 0) return this;\n    return this.errorIf(this.value.endsWith(start), errorMsg || `Must End With '${start}'`);\n  }\n  /////\n  email(errorMsg = void 0) {\n    return this.pattern(EMAIL_PATTERN, errorMsg || \"Invalid email address!\");\n  }\n  phone(errorMsg = void 0) {\n    return this.pattern(PHONE_PATTERN, errorMsg || \"Invalid phone number!\");\n  }\n  // url(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(URL_PATTERN, errorMsg || \"Invalid url!\")\n  // }\n  // emoji(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(URL_PATTERN, errorMsg || \"Invalid url!\")\n  // }\n  // uuid(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(URL_PATTERN, errorMsg || \"Invalid url!\")\n  // }\n  // datetime(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(DATETIME_PATTERN, errorMsg || \"Invalid datetime string!\")\n  // }\n  // date(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(DATE_PATTERN, errorMsg || \"Invalid date string!\")\n  // }\n  // time(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(TIME_PATTERN, errorMsg || \"Invalid time string!\")\n  // }\n  // ip(errorMsg: string | undefined = undefined) {\n  //   return this.pattern(TP_PATTERN, errorMsg || \"Invalid IP address!\")\n  // }\n  //////\n  pattern(pattern, errorMsg) {\n    if (this.value == void 0) return this;\n    return this.errorIf(!pattern.test(this.value), errorMsg);\n  }\n  errorIf(errorCondition, errorMsg) {\n    return super.baseCondition(errorCondition, errorMsg, this);\n  }\n};\n\n// src/validators/validator-methods/validators-collector.ts\nvar ValidatorsCollector = class {\n  value;\n  _validators;\n  get validators() {\n    if (this._validators == void 0) this._validators = new AnyValidators(this);\n    return this._validators;\n  }\n  _stringValidators;\n  get stringValidators() {\n    this.checkType(\"string\");\n    if (this._stringValidators == void 0) this._stringValidators = new StringValidator(this);\n    return this._stringValidators;\n  }\n  _numberValidators;\n  get numberValidators() {\n    if (this.value != void 0 && isNaN(parseInt(this.value))) this.typeError(\"number\");\n    if (this._numberValidators == void 0) this._numberValidators = new NumberValidator(this);\n    return this._numberValidators;\n  }\n  checkType(valid) {\n    if (this.value != void 0 && typeof this.value != valid) this.typeError(valid);\n  }\n  typeError(type) {\n    throw new Error(`Can not access the ${type} validator from non ${type} ValidatorItem`);\n  }\n};\n\n// src/validators/validator-item.ts\nvar ValidatorItem = class extends ValidatorsCollector {\n  constructor(field, setter, validation = void 0) {\n    super();\n    this.field = field;\n    this.setter = setter;\n    if (validation != void 0) this.validations = validation;\n  }\n  valid = void 0;\n  message = void 0;\n  field;\n  setter;\n  validate() {\n    this.value = this.field();\n    this.validations(this.field());\n  }\n  validations = value => {\n    this.valid = value != void 0;\n    if (value == null) this.message = \"No Value Passed!\";\n  };\n  reset() {\n    this.valid = void 0;\n    this.message = void 0;\n  }\n  error(msg) {\n    this.valid = false;\n    this.message = msg;\n  }\n};\n\n// src/validators/validator-result.ts\nvar ValidatorResult = class {\n  field;\n  value;\n  valid;\n  message;\n};\nexport { Validator, ValidatorItem, validator_methods_exports as ValidatorMethods, ValidatorResult, validator_utils_exports as ValidatorUtils };"],
  "mappings": "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",
  "names": []
}
